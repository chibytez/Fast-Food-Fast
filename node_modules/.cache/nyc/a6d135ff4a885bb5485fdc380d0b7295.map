{"version":3,"sources":["userRoutes.spec.js"],"names":["expect","chai","use","require","describe","it","done","request","app","get","then","res","to","have","status","be","an","Error","catch","err","post","delete"],"mappings":"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","file":"userRoutes.spec.js","sourceRoot":"c:/Users/ONews2/Documents/Fast-Food-Fast/server/test","sourcesContent":["import chai from 'chai';\r\n\r\n// import chaiHttp from 'chai-http';\r\n\r\nimport app from '../../app';\r\n\r\nconst expect = chai.expect;\r\n\r\n// chai.use(chaiHttp);\r\nchai.use(require('chai-http'));\r\n\r\ndescribe('ADMIN ROUTES',() =>{\r\n    //Get all orders\r\nit('Should Get All orders',(done)=>{\r\n    chai.request(app)\r\n    .get(\"/api/v1/orders\")\r\n    .then((res) =>{\r\n        expect(res).to.have.status(200);\r\n        expect(res).to.be.an('array')\r\n    })\r\n    done();\r\n});\r\n\r\n//Get Single order\r\nit('Should Get All orders',(done)=>{\r\n    chai.request(app)\r\n    .get(\"/api/v1/orders/:id\")\r\n    .then((res) =>{\r\n        expect(res).to.have.status(200);\r\n        expect(res).to.be.an('array')\r\n    }) \r\n    done();\r\n});\r\n\r\n//Get -invalid path\r\nit('should return not found',(done)=>{\r\n    chai.request(app)\r\n    .get('/INVALID_PATH')\r\n    .then((res) =>{\r\n        throw new Error('path exists!');\r\n    })\r\n    .catch((err)=>{\r\n        expect(err).to.have.status(404);\r\n    });\r\n    done(); \r\n});\r\n\r\n//Post- Add a new order\r\nit('should add a new order', (done)=>{\r\nchai.request(app)\r\n.post(\"/api/v1/orders\")\r\n.then((res) =>{\r\n    expect(res).to.have.status(201);\r\n    expect(res).to.be.an('array');\r\n}) \r\ndone();\r\n});\r\n\r\n//Post - Bad Request\r\nit('should return bad request', (done)=>{\r\nchai.request(app)\r\n.post('/INVALID_PATH')\r\n.then((res)=>{\r\n    throw new Error ('Invalid content');\r\n})\r\n.catch((err)=>{\r\n    expect(err).to.have.status(400);\r\n})\r\ndone();\r\n});\r\n\r\n    //delete an order\r\n    it('should delete an item', (done)=>{\r\n            chai.request(app)\r\n            .delete(\"/api/v1/orders/:id\")\r\n            .then((res)=>{\r\n              expect(res).to.have.status(201);\r\n            expect(res).to.be.an('array');\r\n            });\r\n            done();\r\n            });\r\n\r\n            //bad delete request\r\n            it('Should show an error message when order do not exist',(done)=>{\r\n                chai.request(app)\r\n                .delete('/INVALID_PATH')\r\n                .then((res)=>{\r\n                    throw new Error ('Invalid content');\r\n                })\r\n                .catch((err)=>{\r\n                    expect(err).to.have.status(404);\r\n                })\r\n                done();\r\n                }); \r\n});"]}